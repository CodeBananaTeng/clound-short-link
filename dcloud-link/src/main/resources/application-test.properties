server.port=8003
spring.application.name=dcloud-link

#\u670D\u52A1\u6CE8\u518C\u53D1\u73B0
spring.cloud.nacos.discovery.server-addr=106.55.168.167:8848
spring.cloud.nacos.discovery.username=nacos
spring.cloud.nacos.discovery.password=nacos

#\u57FA\u4E8ERPC\u8C03\u7528token
rpc.token=yjqtyl


#\u5206\u5E93\u5206\u8868\u914D\u7F6E
spring.shardingsphere.datasource.names=ds0,ds1,dsa
spring.shardingsphere.props.sql.show=true

#ds0\u7684\u914D\u7F6E
spring.shardingsphere.datasource.ds0.connectionTimeoutMilliseconds=30000
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.idleTimeoutMilliseconds=60000
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://106.55.168.167:3306/dcloud_link_0?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.maintenanceIntervalMilliseconds=30000
spring.shardingsphere.datasource.ds0.maxLifetimeMilliseconds=1800000
spring.shardingsphere.datasource.ds0.maxPoolSize=50
spring.shardingsphere.datasource.ds0.minPoolSize=50
spring.shardingsphere.datasource.ds0.password=Teng19960106
spring.shardingsphere.datasource.ds0.username=root

#ds1\u7684\u914D\u7F6E
spring.shardingsphere.datasource.ds1.connectionTimeoutMilliseconds=30000
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.idleTimeoutMilliseconds=60000
spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://106.55.168.167:3306/dcloud_link_1?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.maintenanceIntervalMilliseconds=30000
spring.shardingsphere.datasource.ds1.maxLifetimeMilliseconds=1800000
spring.shardingsphere.datasource.ds1.maxPoolSize=50
spring.shardingsphere.datasource.ds1.minPoolSize=50
spring.shardingsphere.datasource.ds1.password=Teng19960106
spring.shardingsphere.datasource.ds1.username=root

#dsa\u7684\u914D\u7F6E
spring.shardingsphere.datasource.dsa.connectionTimeoutMilliseconds=30000
spring.shardingsphere.datasource.dsa.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.dsa.idleTimeoutMilliseconds=60000
spring.shardingsphere.datasource.dsa.jdbc-url=jdbc:mysql://106.55.168.167:3306/dcloud_link_a?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.dsa.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.dsa.maintenanceIntervalMilliseconds=30000
spring.shardingsphere.datasource.dsa.maxLifetimeMilliseconds=1800000
spring.shardingsphere.datasource.dsa.maxPoolSize=50
spring.shardingsphere.datasource.dsa.minPoolSize=50
spring.shardingsphere.datasource.dsa.password=Teng19960106
spring.shardingsphere.datasource.dsa.username=root

#----------\u914D\u7F6E\u9ED8\u8BA4\u6570\u636E\u5E93\uFF0C\u2F50\u5982\u77ED\u94FE\u57DF\u540D\uFF0C\u4E0D\u5206\u5E93\u5206\u8868--------------
spring.shardingsphere.sharding.default-data-source-name=ds0
#\u9ED8\u8BA4id\u2F63\u6210\u7B56\u7565
spring.shardingsphere.sharding.default-key-generator.column=id
spring.shardingsphere.sharding.default-key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.default-key-generator.props.worker.id=${workerId}



spring.shardingsphere.sharding.tables.link_group.database-strategy.inline.sharding-column=account_no
spring.shardingsphere.sharding.tables.link_group.database-strategy.inline.algorithm-expression=ds$->{account_no % 2}


#----------\u77ED\u94FE\uFF0C\u7B56\u7565\uFF1A\u5206\u5E93+\u5206\u8868--------------
# \u5148\u8FDB\u2F8F\u2F54\u5E73\u5206\u5E93\uFF0C\u7136\u540E\u518D\u2F54\u5E73\u5206\u8868
spring.shardingsphere.sharding.tables.short_link.database-strategy.standard.sharding-column=code
spring.shardingsphere.sharding.tables.short_link.database-strategy.standard.precise-algorithm-class-name=com.yulin.strategy.CustomDBPreciseShardingAlgorithm


# \u2F54\u5E73\u5206\u8868\u7B56\u7565\uFF0C\u2F83\u5B9A\u4E49\u7B56\u7565\u3002 \u771F\u5B9E\u5E93.\u903B\u8F91\u8868
spring.shardingsphere.sharding.tables.short_link.actual-data-nodes=ds0.short_link,ds1.short_link,dsa.short_link
spring.shardingsphere.sharding.tables.short_link.table-strategy.standard.sharding-column=code
spring.shardingsphere.sharding.tables.short_link.table-strategy.standard.precise-algorithm-class-name=com.yulin.strategy.CustomTablePreciseShardingAlgorithm


#--------------\u77ED\u94FEmapping\uFF0C\u7B56\u7565\uFF1A\u5206\u5E93\u5206\u8868------------------
# \u5148\u8FDB\u2F8F\u2F54\u5E73\u5206\u5E93\uFF0C\u7136\u540E\u518D\u2F54\u5E73\u5206\u8868\uFF0C \u2F54\u5E73\u5206\u5E93\u7B56\u7565\uFF0C\u2F8F\u8868\u8FBE\u5F0F\u5206\u2F5A
spring.shardingsphere.sharding.tables.group_code_mapping.database-strategy.inline.sharding-column=account_no
spring.shardingsphere.sharding.tables.group_code_mapping.database-strategy.inline.algorithm-expression=ds$->{account_no % 2}
# \u5206\u8868\u7B56\u7565+\u2F8F\u8868\u8FBE\u5F0F\u5206\u2F5A
spring.shardingsphere.sharding.tables.group_code_mapping.actual-data-nodes=ds$->{0..1}.group_code_mapping_$->{0..1}
spring.shardingsphere.sharding.tables.group_code_mapping.table-strategy.inline.sharding-column=group_id
spring.shardingsphere.sharding.tables.group_code_mapping.table-strategy.inline.algorithm-expression=group_code_mapping_$->{group_id % 2}

##----------rabbit\u914D\u7F6E--------------
spring.rabbitmq.host=106.55.168.167
spring.rabbitmq.port=5672
#\u9700\u8981\u2F3F\u2F2F\u521B\u5EFA\u865A\u62DF\u4E3B\u673A
spring.rabbitmq.virtual-host=dev
spring.rabbitmq.username=admin
spring.rabbitmq.password=Teng19960106
#\u6D88\u606F\u786E\u8BA4\u2F45\u5F0F\uFF0Cmanual(\u2F3F\u52A8ack) \u548Cauto(\u2F83\u52A8ack):\u6D88\u606F\u6D88\u8D39\u91CD\u8BD5\u8FBE\u5230\u6307\u5B9A\u6B21\u6570\u8FDB\u5230\u5F02\u5E38\u4EA4\u6362\u673A\u548C\u5F02\u5E38\u961F\u5217\uFF0C\u9700\u8981\u6539\u6210\u81EA\u52A8ack\u786E\u8BA4\u6D88\u606F
spring.rabbitmq.listener.simple.acknowledge-mode=auto

#\u5F00\u542F\u91CD\u8BD5\uFF0C\u6D88\u8D39\u8005\u4EE3\u7801\u4E0D\u80FD\u6DFB\u52A0try catch\u6355\u83B7\u4E0D\u5F80\u5916\u629B\u5F02\u5E38
spring.rabbitmq.listener.simple.retry.enabled=true
#\u6700\u2F24\u91CD\u8BD5\u6B21\u6570
spring.rabbitmq.listener.simple.retry.max-attempts=4
# \u91CD\u8BD5\u6D88\u606F\u7684\u65F6\u95F4\u95F4\u9694\uFF0C5\u79D2
spring.rabbitmq.listener.simple.retry.initial-interval=5000



#redis\u914D\u7F6E
spring.redis.client-type=jedis
spring.redis.host=106.55.168.167
spring.redis.password=Teng19960106
spring.redis.port=6379
spring.redis.jedis.pool.max-active=100
spring.redis.jedis.pool.max-idle=100
spring.redis.jedis.pool.min-idle=100
spring.redis.jedis.pool.max-wait=60000

#----------kafka\u914D\u7F6E--------------
spring.kafka.bootstrap-servers=106.55.168.167:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer