server.port=8001
spring.application.name=dcloud-account
spring.cloud.nacos.discovery.server-addr=106.55.168.167:18848
spring.cloud.nacos.discovery.username=nacos
spring.cloud.nacos.discovery.password=nacos

spring.redis.client-type=jedis
spring.redis.host=106.55.168.167
spring.redis.password=Teng19960106
spring.redis.port=16379
spring.redis.jedis.pool.max-active=100
spring.redis.jedis.pool.max-idle=100
spring.redis.jedis.pool.min-idle=100
spring.redis.jedis.pool.max-wait=60000


#基于RPC调用token
rpc.token=yjqtyl


spring.shardingsphere.datasource.names=ds0
spring.shardingsphere.datasource.ds0.connectionTimeoutMilliseconds=30000
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.idleTimeoutMilliseconds=60000
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://106.55.168.167:13306/dcloud_account?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.ds0.maintenanceIntervalMilliseconds=30000
spring.shardingsphere.datasource.ds0.maxLifetimeMilliseconds=1800000
spring.shardingsphere.datasource.ds0.maxPoolSize=50
spring.shardingsphere.datasource.ds0.minPoolSize=50
spring.shardingsphere.datasource.ds0.password=Teng19960106
spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.props.sql.show=true
# 指定traffic表的数据分布情况，配置数据节点,行表达式标识符使用 ${...} 或 $->{...}，但前者与 Spring 本身的文件占位符冲突，所以在 Spring 环境中建议使用 $->{...}
spring.shardingsphere.sharding.tables.traffic.actual-data-nodes=ds0.traffic_$->{0..1}

#水平分表+行表达式分片
spring.shardingsphere.sharding.tables.traffic.table-strategy.inline.algorithm-expression=traffic_$->{ account_no % 2 }
spring.shardingsphere.sharding.tables.traffic.table-strategy.inline.sharding-column=account_no

#id生成策略
spring.shardingsphere.sharding.tables.traffic.key-generator.column=id
spring.shardingsphere.sharding.tables.traffic.key-generator.props.worker.id=${workId}
spring.shardingsphere.sharding.tables.traffic.key-generator.type=SNOWFLAKE

#短信配置
sms.app-code=48983c708007494fbf6572cbd553d143
sms.template-id=M72CB42894

#阿里云OSS配置
aliyun.oss.endpoint=oss-cn-beijing.aliyuncs.com
aliyun.oss.access-key-id=LTAI5tE21G7pCdVZEKYCVtTq
aliyun.oss.access-key-secret=FU4wCTYabaDTHEpfylPRqh0eLn828W
aliyun.oss.bucketname=dcloud-link-yulin

##----------rabbit配置--------------
spring.rabbitmq.host=106.55.168.167
spring.rabbitmq.port=5672
#需要⼿⼯创建虚拟主机
spring.rabbitmq.virtual-host=dev
spring.rabbitmq.username=admin
spring.rabbitmq.password=Teng19960106
#消息确认⽅式，manual(⼿动ack) 和auto(⾃动ack); 消息消费试到达指定次数进到异常交换机和异常队列，需要改为⾃动ack确认消息
spring.rabbitmq.listener.simple.acknowledge-mode=auto
#开启᯿试，消费者代码不能添加try catch捕获不往外抛异常
spring.rabbitmq.listener.simple.retry.enabled=true
#最⼤重试次数
spring.rabbitmq.listener.simple.retry.max-attempts=4
#重试消息的时间间隔，5秒
spring.rabbitmq.listener.simple.retry.initial-interval=5000

#----------xxl-job配置--------------
logging.config=classpath:logback.xml

#调度中⼼部署地址,多个配置逗号分隔"http://address01,http://address02"
xxl.job.admin.addresses=http://192.168.0.129:8080/xxl-job-admin

#执⾏器token，⾮空时启⽤ xxl-job, access token
xxl.job.accessToken=yjqtyl

# 执⾏器app名称,和控制台那边配置⼀样的名称，不然注册不上去
xxl.job.executor.appname=traffic-app-executor

# [选填]执⾏器注册：优先使⽤该配置作为注册地址，为空时使⽤内嵌服务 ”IP:PORT“ 作为注册地址。
#从⽽更灵活的⽀持容器类型执⾏器动态IP和动态映射端⼝问题。
xxl.job.executor.address=

#[选填]执⾏器IP ：默认为空表示⾃动获取IP（即springboot容器的ip和端⼝，可以⾃动获取，也可以指定），多⽹卡时可⼿动设置指定IP，该IP不会绑定Host仅作为通讯实⽤；地址信息⽤于 "执⾏器注册" 和 "调度中⼼请求并触发任务"，
xxl.job.executor.ip=

# [选填]执⾏器端⼝号：⼩于等于0则⾃动获取；默认端⼝为9999，单机部署多个执⾏器时，注意要配置不同执⾏器端⼝；
xxl.job.executor.port=9999

#执⾏器⽇志⽂件存储路径，需要对该路径拥有读写权限；为空则使⽤默认路径
xxl.job.executor.logpath=./data/logs/xxl-job/executor

#执⾏器⽇志保存天数
xxl.job.executor.logretentiondays=30
